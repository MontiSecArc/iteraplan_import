buildscript {
    ext.kotlin_version = '1.0.6'
    ext.msa_version = "0.8.9.SNAPSHOT"
    ext.msa_name = "IntelliJ_MSA_Language"
    repositories {
        jcenter()
        maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
        maven {
            url 'http://138.68.65.103:8081/artifactory/plugins-release'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "org.jetbrains.intellij" version "0.1.10"
    id "com.jfrog.artifactory" version "4.4.0"
}

apply from: "artifactory.gradle"

group 'de.monticore.lang.montisecarc.import'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'org.jetbrains.intellij'
intellij {
    pluginName name
    version ideaVersion

    downloadSources Boolean.valueOf(downloadIdeaSources)
    updateSinceUntilBuild = false

    sandboxDirectory = "${rootProject.buildDir}/idea-sandbox"

    plugins = ['com.neueda4j.intellij.plugin.cypher:2.2.0']
}

project.afterEvaluate {
    def prepareSandboxTask = project.tasks.findByName("prepareSandbox")
    prepareSandboxTask.doLast {

        def fileList = new File("$prepareSandboxTask.destinationDir/${project.name}/lib/").listFiles()

        fileList.each {

            if(!it.name.contains("ItestraImporter")) {

                delete(it)
            }
        }
    }
}

sourceCompatibility = 1.5

sourceSets {
    main {
        java.srcDirs "gen", "src/java"
        kotlin.srcDirs "src/kotlin"
        resources.srcDir "resources"
    }
}

tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

repositories {
    jcenter()
}

dependencies {
    compile(project("ItestraImporter"))
    compile(project("IntelliJ_MSA"))
    //compile group: "de.monticore.lang.montisecarc", name:"$msa_name", version:"$msa_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}
